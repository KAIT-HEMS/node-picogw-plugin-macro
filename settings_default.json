{
	"macroScript": "// It is important to call resolve() or reject() within this handler.\n\nprint(getArgs());\n\nconst CHECK_DEVS = ['AirConditioner','GenericIllumination'] ;\n// Use regular expression to check multiple devices at once\nconst CHECK_PATH = '/v1/echonet/(' + CHECK_DEVS.join('|') + ')_.+/operatingstate' ;\n\n// Get powers of ECHONET Lite air conditioners and lights\nre = await callProc({method:'GET',path:CHECK_PATH}).catch(reject);\n\nfor( const path in re ){\n  if( re[path].value == 'on' ){\n    resolve('on'); // returns 'on' mode if at least one device is on.\n    return ;\n  }\n}\n\nresolve('off'); // Otherwise (Everything is off) the mode is 'off'\n",
	"pollScript": "// pollScript handler does not have resolve/reject function.\n// Rather, call addLog('KEY','VALUE in string'); as many times as you want.\n\nprint('adding log(s) in macro plugin');\n\n// Check whole mode\nlet re = await callProc({method:'GET',path:'/v1/macro/run'}).catch(e=>{});\naddLog('macro execution result',re.value);\n\n// Check server status\nre = await callProc({method:'GET',path:'/v1/admin/server_status/'}).catch(e=>{});\naddLog('server status',JSON.stringify(re.result));\n",
	"pollInterval": 30,
	"pollLogEntryMax": 300
}